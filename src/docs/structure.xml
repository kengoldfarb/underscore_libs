<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="">
  <file path="_Crypt.php" hash="c6bff77c4dfeff269bfd05a4feb4c9c8" package="Default">
    <include line="23" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="24" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="20" package="Default">
      <name>_BASE_PATH</name>
      <full_name>\_BASE_PATH</full_name>
      <value>realpath(dirname(__FILE__) . '/') . '/'</value>
    </constant>
    <constant namespace="global" line="31" package="Default">
      <name>_CRYPT_CIPHER</name>
      <full_name>\_CRYPT_CIPHER</full_name>
      <value>MCRYPT_RIJNDAEL_256</value>
    </constant>
    <constant namespace="global" line="32" package="Default">
      <name>_CRYPT_MODE</name>
      <full_name>\_CRYPT_MODE</full_name>
      <value>MCRYPT_MODE_CBC</value>
    </constant>
    <constant namespace="global" line="33" package="Default">
      <name>_CRYPT_IV_SIZE</name>
      <full_name>\_CRYPT_IV_SIZE</full_name>
      <value>256</value>
    </constant>
    <constant namespace="global" line="34" package="Default">
      <name>_CRYPT_AES_KEY</name>
      <full_name>\_CRYPT_AES_KEY</full_name>
      <value>'_PHPTestKeyHere1234'</value>
    </constant>
    <constant namespace="global" line="38" package="Default">
      <name>_CRYPT_RSA_PUBLIC_KEY</name>
      <full_name>\_CRYPT_RSA_PUBLIC_KEY</full_name>
      <value>'-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4Vq3tpiH63PYBVW0bBNP
+RISZwStJchfZHIPlbsuQSER/3ePFgbsksAS02qMjZq1QwGrtfD8Tvlseb1G054a
sDCa4m4/TNVHgeE0GXMrHanlPbMF30x0ENbd3rmorbxbcWdImnfhcu0C4SnVqyrZ
Xk2fyJFqLx+TpldfK1wkjCicRzTesutB0lgCe501CRuo9q8hdAuVnq0VayfmuIDz
guMYc9svKA2OyFYxXNCokAz44AW2OJlpw515WJNBTybFjTN9hc5f3CPIFkw4RqkX
f01WSHP5hj1Zaj5bNiQ6PauOjP0fZKqSvjIQtmeicjI/54uuVtBgatdQm5mZqbuy
SwIDAQAB
-----END PUBLIC KEY-----'</value>
    </constant>
    <constant namespace="global" line="48" package="Default">
      <name>_CRYPT_RSA_PRIVATE_KEY</name>
      <full_name>\_CRYPT_RSA_PRIVATE_KEY</full_name>
      <value>'-----BEGIN RSA PRIVATE KEY-----
MIIEpQIBAAKCAQEA4Vq3tpiH63PYBVW0bBNP+RISZwStJchfZHIPlbsuQSER/3eP
FgbsksAS02qMjZq1QwGrtfD8Tvlseb1G054asDCa4m4/TNVHgeE0GXMrHanlPbMF
30x0ENbd3rmorbxbcWdImnfhcu0C4SnVqyrZXk2fyJFqLx+TpldfK1wkjCicRzTe
sutB0lgCe501CRuo9q8hdAuVnq0VayfmuIDzguMYc9svKA2OyFYxXNCokAz44AW2
OJlpw515WJNBTybFjTN9hc5f3CPIFkw4RqkXf01WSHP5hj1Zaj5bNiQ6PauOjP0f
ZKqSvjIQtmeicjI/54uuVtBgatdQm5mZqbuySwIDAQABAoIBAQDae+yPkJR+l6LB
kVVKTvMDRR0oWeVRM1Ig/WDUx1RR+rELYKwOLApjQOs/pBa/F1ZTr6P90rWcD8C2
yuaHNssjNQyFKWQfpswcRO4RGpKbwOMrjYzM8L+6r8cOMCw0vOBfM0a11DJ1DQr0
qG2q9PEnt9SJTUqIg3HQHPd8/2nDo62v/yWFUphmwMUsn83CgfAAEFbhmkv2CL3k
N6vP+GFkBOUITbUWeEgkqN7MwKWMfkFS+iW1LNWAE8yklAArCt+sn4Ro7SN/t+jI
1IV1eCN3e0rpeQiKaJsiztZFYOAEq/+G/8/6cLi5+Q9Z9DFQOnEn3Kb6uqatHre4
zv06Al9hAoGBAPqVktXhdY3A4rOvpoIoxYkyHcYJmOZ5cKsT5hjweT0W7a4scAHz
KiBmBit1S2z8AwdZnT0JXba0ED8vx8aZNx+x4C2gqaw0IBiwTNai1SM9w4gJCNsZ
uSlNzO1uYbuljPlBUp7isL7hjNoqzxDNqgbevH37MKHuKGT0PGja6enRAoGBAOY5
jXr2Z8rTpPBucjX7w2CEq5Dr5ESf9hCgdUQzJRlL27jMvnqjv91SyOE4vmQoc+If
A3FiDZe3VLzGUaWTRS9lwPhHODmGcFyo1Gs1e5PqYzO3Lmrkl7sDlIFTAIxDMhhN
oX05GaPbelGcuaVnQn64Gcp4cOi7dTeu7XtbXIVbAoGAax3rQdB5/tmYTzVj2Tny
jx5ESfaqTMNW3VrJPpn1SZ72hUDrtHms5WKXepZOYs0rwkWViJTrYYGBfHFBVe0C
+mKAMSD/xuQVYFhk0E+VCtaJMiqihX5uf3CJjGlmD9/J7nb1CYRgB4jFPDGWiFlS
OFOYgcYR2PbEf7tD45LI8TECgYEAmMeKpxYL7OKkq1Vv/3kSv+NrA2I3en74yTHi
gB68uNvJdQqSQUqXkaVVX3jLiCX8OQvBuiWKxarI1fl5xzpDCGArPdftbOdVe3gi
dv7oAlHiATjH2fHW6ylGDMhrLamN/ejOiQ4ygLWup6gs3qH206cSnnVs4FU+RXSV
bm5DqM8CgYEA4wGCStCY8BKey0YCnU9+RBJUc46Jf0WAedZapBX/aVQLg9e+DdQx
6cVVbKNmsBa0RupPk6kcJKb+3zofOEFolgbCv8YnXhX2YIsNhzyv8peUfn+bUrdf
jZ10TNRVnrubvoT9KU9e7TCVCDabBxPzGx5AoOwo2W5QS3QseZ/Spfw=
-----END RSA PRIVATE KEY-----'</value>
    </constant>
    <class final="false" abstract="false" namespace="_" line="79" package="Default">
      <extends/>
      <name>_Crypt</name>
      <full_name>\_\_Crypt</full_name>
      <docblock line="76">
        <description>END _Crypt USER OPTIONS
************************************************************************************************</description>
        <long-description></long-description>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="94" package="Default">
        <name>_encryptAESPKCS7</name>
        <full_name>_encryptAESPKCS7</full_name>
        <docblock line="81">
          <description>Encrypts a string using AES encryption with PKCS7 padding.</description>
          <long-description>&lt;p&gt;Random IV is used&lt;/p&gt;

&lt;p&gt;Adapted from comments in PHP manual:
http://php.net/manual/en/function.mcrypt-encrypt.php&lt;/p&gt;</long-description>
          <tag line="81" name="param" description="The string to encrypt" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="param" description="(optional) The private key to encrypt with (note: anything over 24 chars will be chopped off)" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="param" description="(optional) One of the MCRYPT_RIJNDAEL_ ciphers" type="\_\const" variable="$cipher">
            <type by_reference="false">\_\const</type>
          </tag>
          <tag line="81" name="param" description="(optional) One of the MCRYPT_MODE modes" type="\_\cont" variable="$mode">
            <type by_reference="false">\_\cont</type>
          </tag>
          <tag line="81" name="return" description="The encrypted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <argument line="94">
          <name>$key</name>
          <default>_CRYPT_AES_KEY</default>
          <type/>
        </argument>
        <argument line="94">
          <name>$cipher</name>
          <default>_CRYPT_CIPHER</default>
          <type/>
        </argument>
        <argument line="94">
          <name>$mode</name>
          <default>_CRYPT_MODE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="117" package="Default">
        <name>_decryptAESPKCS7</name>
        <full_name>_decryptAESPKCS7</full_name>
        <docblock line="105">
          <description>Decrypts a string using AES encryption with PKCS7 padding.</description>
          <long-description>&lt;p&gt;Adapted from comments in PHP manual:
http://php.net/manual/en/function.mcrypt-encrypt.php&lt;/p&gt;</long-description>
          <tag line="105" name="param" description="The string to encrypt" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="param" description="(optional) The private key to encrypt with (note: anything over 24 chars will be chopped off)" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="param" description="(optional) One of the MCRYPT_RIJNDAEL_ ciphers" type="\_\const" variable="$cipher">
            <type by_reference="false">\_\const</type>
          </tag>
          <tag line="105" name="param" description="(optional) One of the MCRYPT_MODE modes" type="\_\cont" variable="$mode">
            <type by_reference="false">\_\cont</type>
          </tag>
          <tag line="105" name="return" description="The encrypted string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <argument line="117">
          <name>$key</name>
          <default>_CRYPT_AES_KEY</default>
          <type/>
        </argument>
        <argument line="117">
          <name>$cipher</name>
          <default>_CRYPT_CIPHER</default>
          <type/>
        </argument>
        <argument line="117">
          <name>$mode</name>
          <default>_CRYPT_MODE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="139" package="Default">
        <name>_encryptRSA</name>
        <full_name>_encryptRSA</full_name>
        <docblock line="130">
          <description>Combo RSA/AES encryption.</description>
          <long-description>&lt;p&gt;An AES key is generated and the actual data is encrypted
with AES.  The AES key is then encrypted using RSA and prepended to the returned
encrypted string&lt;/p&gt;</long-description>
          <tag line="130" name="param" description="The string to encrypt" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="param" description="(optional) The RSA public key" type="string" variable="$pubKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="return" description="FALSE on failure / The encrypted string on Success" type="boolean|string">
            <type by_reference="false">boolean</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <argument line="139">
          <name>$pubKey</name>
          <default>_CRYPT_RSA_PUBLIC_KEY</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="161" package="Default">
        <name>_decryptRSA</name>
        <full_name>_decryptRSA</full_name>
        <docblock line="153">
          <description>Combo RSA/AES decryption</description>
          <long-description></long-description>
          <tag line="153" name="param" description="The encrypted string" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="param" description="(optional) The RSA private key" type="string" variable="$privKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="param" description="(optional) Whatever was used to encrypt.  Can be: _CRYPT_RSA_1024, _CRYPT_RSA_2048, _CRYPT_RSA_4096" type="\_\cont" variable="$keyBits">
            <type by_reference="false">\_\cont</type>
          </tag>
          <tag line="153" name="return" description="FALSE on failure / The decrypted string on success" type="boolean|string">
            <type by_reference="false">boolean</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
        <argument line="161">
          <name>$privKey</name>
          <default>_CRYPT_RSA_PRIVATE_KEY</default>
          <type/>
        </argument>
        <argument line="161">
          <name>$keyBits</name>
          <default>_CRYPT_RSA_2048</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="_" line="180" package="Default">
        <name>_generateAESKey</name>
        <full_name>_generateAESKey</full_name>
        <docblock line="175">
          <description>Generates a random 24 char string to be used as an AES key</description>
          <long-description></long-description>
          <tag line="175" name="return" description="Random 24 char string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="_" line="191" package="Default">
        <name>_createIV</name>
        <full_name>_createIV</full_name>
        <docblock line="184">
          <description>Generates an initialization vector based on cipher and mode</description>
          <long-description></long-description>
          <tag line="184" name="param" description="The cipher to be used" type="\_\const" variable="$cipher">
            <type by_reference="false">\_\const</type>
          </tag>
          <tag line="184" name="param" description="The mode to be used" type="\_\const" variable="$mode">
            <type by_reference="false">\_\const</type>
          </tag>
          <tag line="184" name="return" description="The initialization vector" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$cipher</name>
          <default></default>
          <type/>
        </argument>
        <argument line="191">
          <name>$mode</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="_" line="203" package="Default">
        <name>_getIVSize</name>
        <full_name>_getIVSize</full_name>
        <docblock line="196">
          <description>Gets the IV size</description>
          <long-description></long-description>
          <tag line="196" name="param" description="" type="\_\cont" variable="$cipher">
            <type by_reference="false">\_\cont</type>
          </tag>
          <tag line="196" name="param" description="" type="\_\cont" variable="$mode">
            <type by_reference="false">\_\cont</type>
          </tag>
          <tag line="196" name="return" description="The IV size" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$cipher</name>
          <default></default>
          <type/>
        </argument>
        <argument line="203">
          <name>$mode</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="213" package="Default">
        <name>_generateRSAKeys</name>
        <full_name>_generateRSAKeys</full_name>
        <docblock line="207">
          <description>Generates a RSA public/private keypair</description>
          <long-description></long-description>
          <tag line="207" name="param" description="(optional) The number of key bits to use. Can be: _CRYPT_RSA_1024, _CRYPT_RSA_2048, _CRYPT_RSA_4096" type="int" variable="$keyBits">
            <type by_reference="false">int</type>
          </tag>
          <tag line="207" name="return" description="Returns an associative array with 'public' and 'private' keys" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="213">
          <name>$keyBits</name>
          <default>_CRYPT_RSA_2048</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="_" line="236" package="Default">
        <name>_getRSAAESKeyLength</name>
        <full_name>_getRSAAESKeyLength</full_name>
        <docblock line="230">
          <description>Based on the key bit length, returns the string length of a base64 encoded AES key</description>
          <long-description></long-description>
          <tag line="230" name="param" description="Can be: _CRYPT_RSA_1024, _CRYPT_RSA_2048, _CRYPT_RSA_4096" type="\_\const" variable="$keylength">
            <type by_reference="false">\_\const</type>
          </tag>
          <tag line="230" name="return" description="FALSE on failure / The string length on success" type="int|boolean">
            <type by_reference="false">int</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="236">
          <name>$keylength</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="_" line="260" package="Default">
        <name>_getBase64IVLength</name>
        <full_name>_getBase64IVLength</full_name>
        <docblock line="252">
          <description>Returns the # of characters in a base64 encoded IV
based on the cipher and mode</description>
          <long-description></long-description>
          <tag line="252" name="param" description="The cipher that is being used" type="\_\type" variable="$cipher">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="252" name="param" description="The mode" type="\_\type" variable="$mode">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="252" name="return" description="FALSE on failure / Size of IV (base64 encoded) on success" type="int|boolean">
            <type by_reference="false">int</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="260">
          <name>$cipher</name>
          <default></default>
          <type/>
        </argument>
        <argument line="260">
          <name>$mode</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="_" line="280" package="Default">
        <name>_chopKeyForAES</name>
        <full_name>_chopKeyForAES</full_name>
        <docblock line="274">
          <description>Since AES supports up to a 24 char key, this function will chop off anything after 24 characters</description>
          <long-description></long-description>
          <tag line="274" name="param" description="The AES key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="return" description="The chopped off key" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="280">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _Crypt.php</error>
    </parse_markers>
  </file>
  <file path="_Db.php" hash="af0cc87d094738a3be0db76a80f6e7f7" package="Default">
    <include line="22" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="23" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="24" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="19" package="Default">
      <name>_BASE_PATH</name>
      <full_name>\_BASE_PATH</full_name>
      <value>realpath(dirname(__FILE__) . '/') . '/'</value>
    </constant>
    <constant namespace="global" line="35" package="Default">
      <name>_DB_HOST</name>
      <full_name>\_DB_HOST</full_name>
      <value>'localhost'</value>
    </constant>
    <constant namespace="global" line="39" package="Default">
      <name>_DB_USERNAME</name>
      <full_name>\_DB_USERNAME</full_name>
      <value>'root'</value>
    </constant>
    <constant namespace="global" line="43" package="Default">
      <name>_DB_PASSWORD</name>
      <full_name>\_DB_PASSWORD</full_name>
      <value>'root'</value>
    </constant>
    <constant namespace="global" line="47" package="Default">
      <name>_DB_NAME</name>
      <full_name>\_DB_NAME</full_name>
      <value>'underscorephp'</value>
    </constant>
    <constant namespace="global" line="51" package="Default">
      <name>_DB_PORT</name>
      <full_name>\_DB_PORT</full_name>
      <value>'3306'</value>
    </constant>
    <constant namespace="global" line="55" package="Default">
      <name>_DB_SOCKET</name>
      <full_name>\_DB_SOCKET</full_name>
      <value>NULL</value>
    </constant>
    <constant namespace="global" line="59" package="Default">
      <name>_DB_USE_EXCEPTIONS</name>
      <full_name>\_DB_USE_EXCEPTIONS</full_name>
      <value>TRUE</value>
    </constant>
    <constant namespace="global" line="63" package="Default">
      <name>_DB_CHARSET</name>
      <full_name>\_DB_CHARSET</full_name>
      <value>'utf8'</value>
    </constant>
    <constant namespace="global" line="68" package="Default">
      <name>_DB_LOG_SQL</name>
      <full_name>\_DB_LOG_SQL</full_name>
      <value>FALSE</value>
    </constant>
    <class final="false" abstract="false" namespace="_" line="77" package="Default">
      <extends/>
      <name>_Db</name>
      <full_name>\_\_Db</full_name>
      <property final="false" static="false" visibility="public" line="89" namespace="_" package="Default">
        <name>$mysqli</name>
        <default></default>
        <docblock line="84">
          <description>The mysqli resource handle.</description>
          <long-description>&lt;p&gt;You can use any of the standard mysqli functions by using this handle&lt;/p&gt;</long-description>
          <tag line="84" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="90" namespace="_" package="Default">
        <name>$isConnected</name>
        <default>FALSE</default>
      </property>
      <property final="false" static="false" visibility="private" line="91" namespace="_" package="Default">
        <name>$host</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="92" namespace="_" package="Default">
        <name>$username</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="93" namespace="_" package="Default">
        <name>$password</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="94" namespace="_" package="Default">
        <name>$dbName</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="95" namespace="_" package="Default">
        <name>$port</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="96" namespace="_" package="Default">
        <name>$socket</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="97" namespace="_" package="Default">
        <name>$lastQuery</name>
        <default>FALSE</default>
      </property>
      <property final="false" static="false" visibility="private" line="98" namespace="_" package="Default">
        <name>$lastResult</name>
        <default>FALSE</default>
      </property>
      <property final="false" static="false" visibility="private" line="99" namespace="_" package="Default">
        <name>$lastRow</name>
        <default>FALSE</default>
      </property>
      <property final="false" static="false" visibility="private" line="100" namespace="_" package="Default">
        <name>$lastCount</name>
        <default>0</default>
      </property>
      <property final="false" static="true" visibility="private" line="258" namespace="_" package="Default">
        <name>$_db</name>
        <default></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="113" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="102">
          <description>Creates a new _Db() object.</description>
          <long-description>&lt;p&gt;Note: A connection attempt will not be made until required&lt;/p&gt;</long-description>
          <tag line="102" name="param" description="" type="\_\type" variable="$host">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="102" name="param" description="" type="\_\type" variable="$username">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="102" name="param" description="" type="\_\type" variable="$password">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="102" name="param" description="" type="\_\type" variable="$dbName">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="102" name="param" description="" type="\_\type" variable="$port">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="102" name="param" description="" type="\_\type" variable="$socket">
            <type by_reference="false">\_\type</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$host</name>
          <default>_DB_HOST</default>
          <type/>
        </argument>
        <argument line="113">
          <name>$username</name>
          <default>_DB_USERNAME</default>
          <type/>
        </argument>
        <argument line="113">
          <name>$password</name>
          <default>_DB_PASSWORD</default>
          <type/>
        </argument>
        <argument line="113">
          <name>$dbName</name>
          <default>_DB_NAME</default>
          <type/>
        </argument>
        <argument line="113">
          <name>$port</name>
          <default>_DB_PORT</default>
          <type/>
        </argument>
        <argument line="113">
          <name>$socket</name>
          <default>_DB_SOCKET</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="129" package="Default">
        <name>query</name>
        <full_name>query</full_name>
        <docblock line="122">
          <description></description>
          <long-description></long-description>
          <tag line="122" name="param" description="" type="\_\type" variable="$sql">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="122" name="param" description="Optional - If set to TRUE will throw an _Exception() | If set to FALSE will return FALSE on error" type="bool" variable="$useExceptions">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="122" name="return" description="" type="boolean|string">
            <type by_reference="false">boolean</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="throws" description="with code _DB_QUERY_ERROR only if _DB_USE_EXCEPTIONS == TRUE or $useExceptions (override) == TRUE" type="\_\_Exception">
            <type by_reference="false">\_\_Exception</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
        <argument line="129">
          <name>$useExceptions</name>
          <default>_DB_USE_EXCEPTIONS</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="174" package="Default">
        <name>getRow</name>
        <full_name>getRow</full_name>
        <docblock line="167">
          <description>Gets the next row in the result set</description>
          <long-description></long-description>
          <tag line="167" name="param" description="| A MySQLi link result object" type="object" variable="$result">
            <type by_reference="false">object</type>
          </tag>
          <tag line="167" name="param" description="| Override to throw an _Exception on error" type="bool" variable="$useExceptions">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="167" name="return" description="| Returns the row as an associative array on success / FALSE on failure" type="\_\array/bool">
            <type by_reference="false">\_\array/bool</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$result</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="174">
          <name>$useExceptions</name>
          <default>_DB_USE_EXCEPTIONS</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="190" package="Default">
        <name>count</name>
        <full_name>count</full_name>
        <docblock line="185">
          <description>Checks how many rows were returned or affected</description>
          <long-description></long-description>
          <tag line="185" name="return" description="| The number of affected rows or the number of rows returned depending on query type" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="200" package="Default">
        <name>escape</name>
        <full_name>escape</full_name>
        <docblock line="194">
          <description>Escapes variables/data in order to make it safe to use in a MySQL query</description>
          <long-description></long-description>
          <tag line="194" name="param" description="| The string to escape" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="194" name="return" description="| Returns the escaped string on success / FALSE on failure" type="\_\string/boolean">
            <type by_reference="false">\_\string/boolean</type>
          </tag>
        </docblock>
        <argument line="200">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="216" package="Default">
        <name>lastId</name>
        <full_name>lastId</full_name>
        <docblock line="210">
          <description>Gets the last 'insert id' which will be the last id affected by an INSERT
or UPDATE statement</description>
          <long-description></long-description>
          <tag line="210" name="return" description="The last insert id" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="_" line="228" package="Default">
        <name>createConnection</name>
        <full_name>createConnection</full_name>
        <docblock line="220">
          <description>Creates the connection to the MySQL DB through the MySQLi interface</description>
          <long-description></long-description>
          <tag line="220" name="param" description="(optional) | Override on whether to use exceptions.  If not passed will use _DB_USE_EXCEPTIONS" type="boolean" variable="$useExceptions">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="220" name="return" description="| TRUE on success (connection was made) / FALSE on failure" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="220" name="throws" description="| If _DB_USE_EXCEPTIONS is TRUE, will throw an exception instead of returning&#10;false on connection error" type="\_\_Exception">
            <type by_reference="false">\_\_Exception</type>
          </tag>
        </docblock>
        <argument line="228">
          <name>$useExceptions</name>
          <default>_DB_USE_EXCEPTIONS</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="267" package="Default">
        <name>_query</name>
        <full_name>_query</full_name>
        <docblock line="260">
          <description></description>
          <long-description></long-description>
          <tag line="260" name="param" description="" type="\_\type" variable="$sql">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="260" name="param" description="Optional - If set to TRUE will throw an _Exception() | If set to FALSE will return FALSE on error" type="bool" variable="$useExceptions">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="260" name="return" description="" type="boolean|string">
            <type by_reference="false">boolean</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="260" name="throws" description="with code _DB_QUERY_ERROR only if _DB_USE_EXCEPTIONS == TRUE or $useExceptions (override) == TRUE" type="\_\_Exception">
            <type by_reference="false">\_\_Exception</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$sql</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="279" package="Default">
        <name>_count</name>
        <full_name>_count</full_name>
        <docblock line="274">
          <description>Checks how many rows were returned or affected</description>
          <long-description></long-description>
          <tag line="274" name="return" description="| The number of affected rows or the number of rows returned depending on query type" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="293" package="Default">
        <name>_getRow</name>
        <full_name>_getRow</full_name>
        <docblock line="286">
          <description>Gets the next row in the result set</description>
          <long-description></long-description>
          <tag line="286" name="param" description="| A MySQLi link result object" type="object" variable="$result">
            <type by_reference="false">object</type>
          </tag>
          <tag line="286" name="param" description="| Override to throw an _Exception on error" type="bool" variable="$useExceptions">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="286" name="return" description="| Returns the row as an associative array on success / FALSE on failure" type="\_\array/bool">
            <type by_reference="false">\_\array/bool</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$result</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="293">
          <name>$useExceptions</name>
          <default>_DB_USE_EXCEPTIONS</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="308" package="Default">
        <name>_createConnection</name>
        <full_name>_createConnection</full_name>
        <docblock line="300">
          <description>Creates the connection to the MySQL DB through the MySQLi interface</description>
          <long-description></long-description>
          <tag line="300" name="param" description="(optional) | Override on whether to use exceptions.  If not passed will use _DB_USE_EXCEPTIONS" type="boolean" variable="$useExceptions">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="300" name="return" description="| TRUE on success (connection was made) / FALSE on failure" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="300" name="throws" description="| If _DB_USE_EXCEPTIONS is TRUE, will throw an exception instead of returning&#10;false on connection error" type="\_\_Exception">
            <type by_reference="false">\_\_Exception</type>
          </tag>
        </docblock>
        <argument line="308">
          <name>$host</name>
          <default>_DB_HOST</default>
          <type/>
        </argument>
        <argument line="308">
          <name>$username</name>
          <default>_DB_USERNAME</default>
          <type/>
        </argument>
        <argument line="308">
          <name>$password</name>
          <default>_DB_PASSWORD</default>
          <type/>
        </argument>
        <argument line="308">
          <name>$dbName</name>
          <default>_DB_NAME</default>
          <type/>
        </argument>
        <argument line="308">
          <name>$port</name>
          <default>_DB_PORT</default>
          <type/>
        </argument>
        <argument line="308">
          <name>$socket</name>
          <default>_DB_SOCKET</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="318" package="Default">
        <name>_escape</name>
        <full_name>_escape</full_name>
        <docblock line="312">
          <description>Escapes variables/data in order to make it safe to use in a MySQL query</description>
          <long-description></long-description>
          <tag line="312" name="param" description="| The string to escape" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="312" name="return" description="| Returns the escaped string on success / FALSE on failure" type="\_\string/boolean">
            <type by_reference="false">\_\string/boolean</type>
          </tag>
        </docblock>
        <argument line="318">
          <name>$str</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="325" package="Default">
        <name>_lastId</name>
        <full_name>_lastId</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="_" line="329" package="Default">
        <name>_isConnected</name>
        <full_name>_isConnected</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _Db.php</error>
      <error line="77" code="50000">No DocBlock was found for \_\_Db</error>
      <error line="90" code="50018">No DocBlock was found for property $isConnected</error>
      <error line="91" code="50018">No DocBlock was found for property $host</error>
      <error line="92" code="50018">No DocBlock was found for property $username</error>
      <error line="93" code="50018">No DocBlock was found for property $password</error>
      <error line="94" code="50018">No DocBlock was found for property $dbName</error>
      <error line="95" code="50018">No DocBlock was found for property $port</error>
      <error line="96" code="50018">No DocBlock was found for property $socket</error>
      <error line="97" code="50018">No DocBlock was found for property $lastQuery</error>
      <error line="98" code="50018">No DocBlock was found for property $lastResult</error>
      <error line="99" code="50018">No DocBlock was found for property $lastRow</error>
      <error line="100" code="50018">No DocBlock was found for property $lastCount</error>
      <error line="258" code="50018">No DocBlock was found for property $_db</error>
      <error line="122" code="50012">No short description for method query()</error>
      <error line="260" code="50012">No short description for method _query()</error>
      <notice line="260" code="50013">Parameter $useExceptions could not be found in _query()</notice>
      <error line="300" code="50014">Name of argument $host does not match with the DocBlock's name $useExceptions in _createConnection()</error>
      <error line="300" code="50015">Argument $username is missing from the Docblock of _createConnection()</error>
      <error line="300" code="50015">Argument $password is missing from the Docblock of _createConnection()</error>
      <error line="300" code="50015">Argument $dbName is missing from the Docblock of _createConnection()</error>
      <error line="300" code="50015">Argument $port is missing from the Docblock of _createConnection()</error>
      <error line="300" code="50015">Argument $socket is missing from the Docblock of _createConnection()</error>
      <notice line="300" code="50013">Parameter $useExceptions could not be found in _createConnection()</notice>
      <error line="325" code="50010">No DocBlock was found for method _lastId()</error>
      <error line="329" code="50010">No DocBlock was found for method _isConnected()</error>
    </parse_markers>
  </file>
  <file path="_Exception.php" hash="099718b244864b5215862dd17caae800" package="Default">
    <class final="false" abstract="false" namespace="_" line="18" package="Default">
      <extends>\Exception</extends>
      <name>_Exception</name>
      <full_name>\_\_Exception</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="20" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="20">
          <name>$message</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="20">
          <name>$code</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="20">
          <name>$previous</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _Exception.php</error>
      <error line="18" code="50000">No DocBlock was found for \_\_Exception</error>
      <error line="20" code="50010">No DocBlock was found for method __construct()</error>
    </parse_markers>
  </file>
  <file path="_File.php" hash="3238cb16c93188df356a93e8113b99be" package="Default">
    <include line="21" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="22" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="23" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="19" package="Default">
      <name>_BASE_PATH</name>
      <full_name>\_BASE_PATH</full_name>
      <value>realpath(dirname(__FILE__) . '/') . '/'</value>
    </constant>
    <class final="false" abstract="false" namespace="_" line="25" package="Default">
      <extends/>
      <name>_File</name>
      <full_name>\_\_File</full_name>
      <property final="false" static="false" visibility="public" line="27" namespace="_" package="Default">
        <name>$filename</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="28" namespace="_" package="Default">
        <name>$filePermissions</name>
        <default></default>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="_" package="Default">
        <name>$fh</name>
        <default>FALSE</default>
      </property>
      <property final="false" static="true" visibility="private" line="143" namespace="_" package="Default">
        <name>$_file</name>
        <default>FALSE</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="48" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="31">
          <description></description>
          <long-description></long-description>
          <tag line="31" name="param" description="(optional) The file to open or _FILE_TMP to generate a temporary file" type="\_\type" variable="$filename">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="31" name="param" description="(optional) The permissions to open the file&#10; _FILE_READ_ONLY&#10;_FILE_READ_WRITE&#10;_FILE_WRITING_ONLY_CREATE&#10;_FILE_READ_WRITE_TRUNCATE_CREATE&#10;_FILE_WRITE_ONLY_END_OF_FILE_CREATE&#10;_FILE_READ_WRITE_END_OF_FILE_CREATE&#10;_FILE_WRITE_ONLY_BEGIN_OF_FILE&#10;_FILE_READ_WRITE_BEGIN_OF_FILE&#10;_FILE_WRITE_ONLY_NO_TRUNCATE_BEGIN_OF_FILE&#10;_FILE_READ_WRITE_NO_TRUNCATE_BEGIN_OF_FILE" type="\_\type" variable="$permissions">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="31" name="return" description="TRUE on success of opening $filename / FALSE on failure to open $filename OR if no $filename was provided" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$filename</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="48">
          <name>$permissions</name>
          <default>_FILE_READ_WRITE_END_OF_FILE_CREATE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="56" package="Default">
        <name>writeToFile</name>
        <full_name>writeToFile</full_name>
        <argument line="56">
          <name>$textToWrite</name>
          <default></default>
          <type/>
        </argument>
        <argument line="56">
          <name>$filename</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="72" package="Default">
        <name>getFilePermissions</name>
        <full_name>getFilePermissions</full_name>
        <docblock line="67">
          <description>Gets the current file permissions for the specified file</description>
          <long-description></long-description>
          <tag line="67" name="param" description="The file" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$filename</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="76" package="Default">
        <name>readAllFromFile</name>
        <full_name>readAllFromFile</full_name>
        <argument line="76">
          <name>$filename</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="83" package="Default">
        <name>readByLineFromFile</name>
        <full_name>readByLineFromFile</full_name>
        <argument line="83">
          <name>$filename</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="87" package="Default">
        <name>deleteFile</name>
        <full_name>deleteFile</full_name>
        <argument line="87">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="_" line="96" package="Default">
        <name>getTemporaryFileDirectory</name>
        <full_name>getTemporaryFileDirectory</full_name>
        <docblock line="91">
          <description>Gets the location where temporary files are stored on the system</description>
          <long-description></long-description>
          <tag line="91" name="return" description="The temporary file directory" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="_" line="105" package="Default">
        <name>closeFile</name>
        <full_name>closeFile</full_name>
        <docblock line="100">
          <description>Closes the current file handle</description>
          <long-description></long-description>
          <tag line="100" name="return" description="TRUE on success / FALSE on failure" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="_" line="121" package="Default">
        <name>openFile</name>
        <full_name>openFile</full_name>
        <docblock line="115">
          <description></description>
          <long-description></long-description>
          <tag line="115" name="param" description="The file to open" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="param" description="The permissions" type="\_\const" variable="$permissions">
            <type by_reference="false">\_\const</type>
          </tag>
          <tag line="115" name="return" description="TRUE if file was opened / FALSE if file was unable to be opened" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="121">
          <name>$permissions</name>
          <default>_FILE_READ_WRITE_END_OF_FILE_CREATE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="145" package="Default">
        <name>_writeToFile</name>
        <full_name>_writeToFile</full_name>
        <argument line="145">
          <name>$textToWrite</name>
          <default></default>
          <type/>
        </argument>
        <argument line="145">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="145">
          <name>$permissions</name>
          <default>_FILE_READ_WRITE_END_OF_FILE_CREATE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="152" package="Default">
        <name>_readAllFromFile</name>
        <full_name>_readAllFromFile</full_name>
        <argument line="152">
          <name>$filename</name>
          <default></default>
          <type/>
        </argument>
        <argument line="152">
          <name>$permission</name>
          <default>_FILE_READ_ONLY</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="_" line="159" package="Default">
        <name>_createFileObject</name>
        <full_name>_createFileObject</full_name>
        <argument line="159">
          <name>$filename</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="159">
          <name>$permissions</name>
          <default>_FILE_READ_WRITE_END_OF_FILE_CREATE</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _File.php</error>
      <error line="25" code="50000">No DocBlock was found for \_\_File</error>
      <error line="27" code="50018">No DocBlock was found for property $filename</error>
      <error line="28" code="50018">No DocBlock was found for property $filePermissions</error>
      <error line="29" code="50018">No DocBlock was found for property $fh</error>
      <error line="143" code="50018">No DocBlock was found for property $_file</error>
      <error line="31" code="50012">No short description for method __construct()</error>
      <error line="56" code="50010">No DocBlock was found for method writeToFile()</error>
      <error line="76" code="50010">No DocBlock was found for method readAllFromFile()</error>
      <error line="83" code="50010">No DocBlock was found for method readByLineFromFile()</error>
      <error line="87" code="50010">No DocBlock was found for method deleteFile()</error>
      <error line="115" code="50012">No short description for method openFile()</error>
      <error line="145" code="50010">No DocBlock was found for method _writeToFile()</error>
      <error line="152" code="50010">No DocBlock was found for method _readAllFromFile()</error>
      <error line="159" code="50010">No DocBlock was found for method _createFileObject()</error>
    </parse_markers>
  </file>
  <file path="_includes/_CryptIncludes.php" hash="d2e0c97130ba24481db37f75834186c3" package="Default">
    <constant namespace="global" line="12" package="Default">
      <name>_CRYPT_RSA_1024</name>
      <full_name>\_CRYPT_RSA_1024</full_name>
      <value>1024</value>
    </constant>
    <constant namespace="global" line="13" package="Default">
      <name>_CRYPT_RSA_2048</name>
      <full_name>\_CRYPT_RSA_2048</full_name>
      <value>2048</value>
    </constant>
    <constant namespace="global" line="14" package="Default">
      <name>_CRYPT_RSA_4096</name>
      <full_name>\_CRYPT_RSA_4096</full_name>
      <value>4096</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _includes/_CryptIncludes.php</error>
    </parse_markers>
  </file>
  <file path="_includes/_DbIncludes.php" hash="4cec76a2c9fc7b3bfad3f8b0bd33d89f" package="Default">
    <constant namespace="global" line="12" package="Default">
      <name>_DB_CONNECTION_ERROR</name>
      <full_name>\_DB_CONNECTION_ERROR</full_name>
      <value>-1300</value>
    </constant>
    <constant namespace="global" line="13" package="Default">
      <name>_DB_QUERY_ERROR</name>
      <full_name>\_DB_QUERY_ERROR</full_name>
      <value>-1301</value>
    </constant>
    <constant namespace="global" line="14" package="Default">
      <name>_DB_ERROR</name>
      <full_name>\_DB_ERROR</full_name>
      <value>-1302</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _includes/_DbIncludes.php</error>
    </parse_markers>
  </file>
  <file path="_includes/_FileIncludes.php" hash="5ecc349d650cb0e62b2c2ec51b5598fd" package="Default">
    <constant namespace="global" line="13" package="Default">
      <name>_FILE_READ_ONLY</name>
      <full_name>\_FILE_READ_ONLY</full_name>
      <value>'r'</value>
    </constant>
    <constant namespace="global" line="14" package="Default">
      <name>_FILE_READ_WRITE</name>
      <full_name>\_FILE_READ_WRITE</full_name>
      <value>'r+'</value>
    </constant>
    <constant namespace="global" line="15" package="Default">
      <name>_FILE_WRITING_ONLY_CREATE</name>
      <full_name>\_FILE_WRITING_ONLY_CREATE</full_name>
      <value>'w'</value>
    </constant>
    <constant namespace="global" line="16" package="Default">
      <name>_FILE_READ_WRITE_TRUNCATE_CREATE</name>
      <full_name>\_FILE_READ_WRITE_TRUNCATE_CREATE</full_name>
      <value>'w+'</value>
    </constant>
    <constant namespace="global" line="17" package="Default">
      <name>_FILE_WRITE_ONLY_END_OF_FILE_CREATE</name>
      <full_name>\_FILE_WRITE_ONLY_END_OF_FILE_CREATE</full_name>
      <value>'a'</value>
    </constant>
    <constant namespace="global" line="18" package="Default">
      <name>_FILE_READ_WRITE_END_OF_FILE_CREATE</name>
      <full_name>\_FILE_READ_WRITE_END_OF_FILE_CREATE</full_name>
      <value>'a+'</value>
    </constant>
    <constant namespace="global" line="19" package="Default">
      <name>_FILE_WRITE_ONLY_BEGIN_OF_FILE</name>
      <full_name>\_FILE_WRITE_ONLY_BEGIN_OF_FILE</full_name>
      <value>'x'</value>
    </constant>
    <constant namespace="global" line="20" package="Default">
      <name>_FILE_READ_WRITE_BEGIN_OF_FILE</name>
      <full_name>\_FILE_READ_WRITE_BEGIN_OF_FILE</full_name>
      <value>'x+'</value>
    </constant>
    <constant namespace="global" line="21" package="Default">
      <name>_FILE_WRITE_ONLY_NO_TRUNCATE_BEGIN_OF_FILE</name>
      <full_name>\_FILE_WRITE_ONLY_NO_TRUNCATE_BEGIN_OF_FILE</full_name>
      <value>'c'</value>
    </constant>
    <constant namespace="global" line="22" package="Default">
      <name>_FILE_READ_WRITE_NO_TRUNCATE_BEGIN_OF_FILE</name>
      <full_name>\_FILE_READ_WRITE_NO_TRUNCATE_BEGIN_OF_FILE</full_name>
      <value>'c+'</value>
    </constant>
    <constant namespace="global" line="23" package="Default">
      <name>_FILE_TMP</name>
      <full_name>\_FILE_TMP</full_name>
      <value>'_FILE_CREATE_TEMPORARY'</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _includes/_FileIncludes.php</error>
    </parse_markers>
  </file>
  <file path="_includes/_LogIncludes.php" hash="76a416b3e3edea63648c932df794fb86" package="Default">
    <constant namespace="global" line="12" package="Default">
      <name>_FATAL</name>
      <full_name>\_FATAL</full_name>
      <value>-13000</value>
    </constant>
    <constant namespace="global" line="13" package="Default">
      <name>_CRIT</name>
      <full_name>\_CRIT</full_name>
      <value>-13001</value>
    </constant>
    <constant namespace="global" line="14" package="Default">
      <name>_WARN</name>
      <full_name>\_WARN</full_name>
      <value>-13002</value>
    </constant>
    <constant namespace="global" line="15" package="Default">
      <name>_INFO</name>
      <full_name>\_INFO</full_name>
      <value>-13003</value>
    </constant>
    <constant namespace="global" line="16" package="Default">
      <name>_DEBUG</name>
      <full_name>\_DEBUG</full_name>
      <value>-13004</value>
    </constant>
    <constant namespace="global" line="17" package="Default">
      <name>_DEBUG_LIB</name>
      <full_name>\_DEBUG_LIB</full_name>
      <value>-13005</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _includes/_LogIncludes.php</error>
    </parse_markers>
  </file>
  <file path="_includes/_LogLib.php" hash="e4f48bc07c4b8dddcbd3c3f254b32d97" package="Default">
    <include line="21" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="22" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="18" package="Default">
      <name>_BASE_PATH</name>
      <full_name>\_BASE_PATH</full_name>
      <value>realpath(dirname(__FILE__) . '/../') . '/'</value>
    </constant>
    <class final="false" abstract="false" namespace="_" line="24" package="Default">
      <extends>\_\_Log</extends>
      <name>_LogLib</name>
      <full_name>\_\_LogLib</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="35" package="Default">
        <name>debug</name>
        <full_name>debug</full_name>
        <docblock line="25">
          <description>WARNING: YOU SHOULD USE THE REGULAR _Log CLASS</description>
          <long-description>&lt;p&gt;This should be used only for _Lib logging&lt;/p&gt;

&lt;p&gt;Logs a message or complex object at the _DEBUG_LIB log level&lt;/p&gt;</long-description>
          <tag line="25" name="param" description="" type="object" variable="$anyObject">
            <type by_reference="false">object</type>
          </tag>
          <tag line="25" name="return" description="| TRUE on success / FALSE on failure" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$anyObject</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _includes/_LogLib.php</error>
      <error line="24" code="50000">No DocBlock was found for \_\_LogLib</error>
    </parse_markers>
  </file>
  <file path="_includes/_ServiceResponseIncludes.php" hash="7fe11004fe0663dd4bc0f3b1403c06b3" package="Default">
    <constant namespace="global" line="12" package="Default">
      <name>_ServiceResponse_JSON</name>
      <full_name>\_ServiceResponse_JSON</full_name>
      <value>'json'</value>
    </constant>
    <constant namespace="global" line="13" package="Default">
      <name>_ServiceResponse_XML</name>
      <full_name>\_ServiceResponse_XML</full_name>
      <value>'xml'</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _includes/_ServiceResponseIncludes.php</error>
    </parse_markers>
  </file>
  <file path="_includes/_WebResponseIncludes.php" hash="c3935f5273b555701236d1e65b729636" package="Default">
    <class final="false" abstract="false" namespace="_\_includes" line="14" package="Default">
      <extends/>
      <name>_WebResponseIncludes</name>
      <full_name>\_\_includes\_WebResponseIncludes</full_name>
      <property final="false" static="true" visibility="public" line="16" namespace="_\_includes" package="Default">
        <name>$STATUS_CODES</name>
        <default>array(200 =&gt; 'OK', 301 =&gt; 'Moved Permanently', 302 =&gt; 'Found', 304 =&gt; 'Not Modified', 400 =&gt; 'Bad Request', 401 =&gt; 'Unauthorized', 403 =&gt; 'Forbidden', 404 =&gt; 'Not Found', 405 =&gt; 'Method Not Allowed', 406 =&gt; 'Not Acceptable', 407 =&gt; 'Proxy Authentication Required', 408 =&gt; 'Request Timeout', 415 =&gt; 'Unsupported Media Type', 500 =&gt; 'Internal Server Error', 501 =&gt; 'Not Implemented', 502 =&gt; 'Bad Gateway', 503 =&gt; 'Service Unavailable', 504 =&gt; 'Gateway Timeout', 505 =&gt; 'HTTP Version Not Supported')</default>
      </property>
      <property final="false" static="true" visibility="public" line="37" namespace="_\_includes" package="Default">
        <name>$DEFAULT_STATUS_CODES</name>
        <default>array()</default>
      </property>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _includes/_WebResponseIncludes.php</error>
      <error line="14" code="50000">No DocBlock was found for \_\_includes\_WebResponseIncludes</error>
      <error line="16" code="50018">No DocBlock was found for property $STATUS_CODES</error>
      <error line="37" code="50018">No DocBlock was found for property $DEFAULT_STATUS_CODES</error>
    </parse_markers>
  </file>
  <file path="_Log.php" hash="cd2f9dc8a3a95ea9efc66f2f87acc9aa" package="Default">
    <include line="31" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="28" package="Default">
      <name>_BASE_PATH</name>
      <full_name>\_BASE_PATH</full_name>
      <value>realpath(dirname(__FILE__) . '/') . '/'</value>
    </constant>
    <constant namespace="global" line="45" package="Default">
      <name>_LOG_LEVEL</name>
      <full_name>\_LOG_LEVEL</full_name>
      <value>_INFO</value>
    </constant>
    <constant namespace="global" line="50" package="Default">
      <name>_LOG_OBJECTS</name>
      <full_name>\_LOG_OBJECTS</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="55" package="Default">
      <name>_LOG_ECHO</name>
      <full_name>\_LOG_ECHO</full_name>
      <value>false</value>
    </constant>
    <constant namespace="global" line="60" package="Default">
      <name>_LOG_USE_EXCEPTIONS</name>
      <full_name>\_LOG_USE_EXCEPTIONS</full_name>
      <value>true</value>
    </constant>
    <class final="false" abstract="false" namespace="_" line="66" package="Default">
      <extends/>
      <name>_Log</name>
      <full_name>\_\_Log</full_name>
      <docblock line="63">
        <description>END USER OPTIONS
************************************************************************************************</description>
        <long-description></long-description>
      </docblock>
      <property final="false" static="true" visibility="public" line="71" namespace="_" package="Default">
        <name>$logLevel</name>
        <default>_LOG_LEVEL</default>
        <docblock line="68">
          <description></description>
          <long-description></long-description>
          <tag line="68" name="var" description="| May be: _DEBUG, _INFO, _WARN, _CRIT, _FATAL" type="\_\_LOG_LEVEL">
            <type by_reference="false">\_\_LOG_LEVEL</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="76" namespace="_" package="Default">
        <name>$logObjects</name>
        <default>_LOG_OBJECTS</default>
        <docblock line="73">
          <description></description>
          <long-description></long-description>
          <tag line="73" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="81" namespace="_" package="Default">
        <name>$logEcho</name>
        <default>_LOG_ECHO</default>
        <docblock line="78">
          <description></description>
          <long-description></long-description>
          <tag line="78" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="86" namespace="_" package="Default">
        <name>$useExceptions</name>
        <default>_LOG_USE_EXCEPTIONS</default>
        <docblock line="83">
          <description></description>
          <long-description></long-description>
          <tag line="83" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="93" namespace="_" package="Default">
        <name>$logLevelToString</name>
        <default>array(_FATAL =&gt; '_FATAL', _CRIT =&gt; '_CRIT', _WARN =&gt; '_WARN', _INFO =&gt; '_INFO', _DEBUG =&gt; '_DEBUG', _DEBUG_LIB =&gt; '_DEBUG_LIB')</default>
        <docblock line="88">
          <description>Mapping of log level constants to strings</description>
          <long-description></long-description>
          <tag line="88" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="101" namespace="_" package="Default">
        <name>$numFileLogs</name>
        <default>0</default>
      </property>
      <property final="false" static="true" visibility="protected" line="108" namespace="_" package="Default">
        <name>$lastDebugBacktrace</name>
        <default>FALSE</default>
        <docblock line="103">
          <description>The last debug_backtrace() result</description>
          <long-description></long-description>
          <tag line="103" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="116" package="Default">
        <name>debug</name>
        <full_name>debug</full_name>
        <docblock line="110">
          <description>Logs a message or complex object at the _DEBUG log level</description>
          <long-description></long-description>
          <tag line="110" name="param" description="" type="object" variable="$anyObject">
            <type by_reference="false">object</type>
          </tag>
          <tag line="110" name="return" description="| TRUE on success / FALSE on failure" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$anyObject</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="126" package="Default">
        <name>info</name>
        <full_name>info</full_name>
        <docblock line="120">
          <description>Logs a message or complex object at the _INFO log level</description>
          <long-description></long-description>
          <tag line="120" name="param" description="" type="object" variable="$anyObject">
            <type by_reference="false">object</type>
          </tag>
          <tag line="120" name="return" description="| TRUE on success / FALSE on failure" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$anyObject</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="136" package="Default">
        <name>warn</name>
        <full_name>warn</full_name>
        <docblock line="130">
          <description>Logs a message or complex object at the _WARN log level</description>
          <long-description></long-description>
          <tag line="130" name="param" description="" type="object" variable="$anyObject">
            <type by_reference="false">object</type>
          </tag>
          <tag line="130" name="return" description="| TRUE on success / FALSE on failure" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$anyObject</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="146" package="Default">
        <name>crit</name>
        <full_name>crit</full_name>
        <docblock line="140">
          <description>Logs a message or complex object at the _CRIT log level</description>
          <long-description></long-description>
          <tag line="140" name="param" description="" type="object" variable="$anyObject">
            <type by_reference="false">object</type>
          </tag>
          <tag line="140" name="return" description="| TRUE on success / FALSE on failure" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$anyObject</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="156" package="Default">
        <name>fatal</name>
        <full_name>fatal</full_name>
        <docblock line="150">
          <description>Logs a message or complex object at the _FATAL log level</description>
          <long-description></long-description>
          <tag line="150" name="param" description="" type="object" variable="$anyObject">
            <type by_reference="false">object</type>
          </tag>
          <tag line="150" name="return" description="| TRUE on success / FALSE on failure" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$anyObject</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="165" package="Default">
        <name>getLastDebugBacktrace</name>
        <full_name>getLastDebugBacktrace</full_name>
        <docblock line="160">
          <description>Returns the last debug_backtrace() that was run</description>
          <long-description></long-description>
          <tag line="160" name="return" description="| The last debug_backtrace() run / FALSE if there is no previous debug_backtrace()" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="_" line="175" package="Default">
        <name>shouldWriteToLogAtLevel</name>
        <full_name>shouldWriteToLogAtLevel</full_name>
        <docblock line="169">
          <description>Checks if the current log level is at or above the defined _LOG_LEVEL</description>
          <long-description></long-description>
          <tag line="169" name="param" description="The log level" type="\_\type" variable="$level">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="169" name="return" description="Whether or not a log should be written" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="_" line="189" package="Default">
        <name>writeToLog</name>
        <full_name>writeToLog</full_name>
        <docblock line="182">
          <description>Common logging function.</description>
          <long-description>&lt;p&gt;This is the heart of the _Log class and actually builds the message&lt;/p&gt;</long-description>
          <tag line="182" name="param" description="| May be:  _DEBUG, _INFO, _WARN, _CRIT, _FATAL" type="\_\_LOG_LEVEL" variable="$level">
            <type by_reference="false">\_\_LOG_LEVEL</type>
          </tag>
          <tag line="182" name="param" description="| The object to be logged" type="object" variable="$obj">
            <type by_reference="false">object</type>
          </tag>
          <tag line="182" name="return" description="| TRUE on success / FALSE on failure" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$level</name>
          <default></default>
          <type/>
        </argument>
        <argument line="189">
          <name>$obj</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="_" line="290" package="Default">
        <name>_doLog</name>
        <full_name>_doLog</full_name>
        <docblock line="283">
          <description>Writes the actual log message to error_log() or echos the message depending on whether self::$logEcho is TRUE or FALSE</description>
          <long-description></long-description>
          <tag line="283" name="param" description="" type="string" variable="$msg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="283" name="return" description="| TRUE on success / FALSE on failure" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="283" name="throws" description="| Only if error_log() fails and self::$useExceptions is TRUE" type="\_\_Exception">
            <type by_reference="false">\_\_Exception</type>
          </tag>
        </docblock>
        <argument line="290">
          <name>$msg</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="_" line="311" package="Default">
        <name>_getFile</name>
        <full_name>_getFile</full_name>
        <docblock line="305">
          <description>Extracts the filename from a full path</description>
          <long-description></long-description>
          <tag line="305" name="param" description="The full path name" type="string" variable="$fullPath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="305" name="return" description="The file name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="311">
          <name>$fullPath</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="199">fix formatting of message here</todo>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _Log.php</error>
      <critical line="73" code="50019">No short description for property $logObjects</critical>
      <critical line="78" code="50019">No short description for property $logEcho</critical>
      <critical line="83" code="50019">No short description for property $useExceptions</critical>
      <error line="101" code="50018">No DocBlock was found for property $numFileLogs</error>
    </parse_markers>
  </file>
  <file path="_Rand.php" hash="7d018babd044a1df334a60b91e4d2f03" package="Default">
    <class final="false" abstract="false" namespace="_" line="19" package="Default">
      <extends/>
      <name>_Rand</name>
      <full_name>\_\_Rand</full_name>
      <property final="false" static="true" visibility="private" line="21" namespace="_" package="Default">
        <name>$lettersNums</name>
        <default>'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="30" package="Default">
        <name>_getRand</name>
        <full_name>_getRand</full_name>
        <docblock line="23">
          <description>Wrapper for php's rand() function.</description>
          <long-description>&lt;p&gt;Probably unnecessary&lt;/p&gt;</long-description>
          <tag line="23" name="param" description="" type="\_\type" variable="$min">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="23" name="param" description="" type="\_\type" variable="$max">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="23" name="return" description="" type="\_\type">
            <type by_reference="false">\_\type</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$min</name>
          <default></default>
          <type/>
        </argument>
        <argument line="30">
          <name>$max</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="41" package="Default">
        <name>_randString</name>
        <full_name>_randString</full_name>
        <docblock line="34">
          <description>Creates a random string of the specified length</description>
          <long-description></long-description>
          <tag line="34" name="param" description="The length of the string" type="int" variable="$length">
            <type by_reference="false">int</type>
          </tag>
          <tag line="34" name="param" description="Should only letters and numbers be used?" type="bool" variable="$lettersNumbersOnly">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="34" name="return" description="A random string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$length</name>
          <default></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$lettersNumbersOnly</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="62" package="Default">
        <name>_randCharacter</name>
        <full_name>_randCharacter</full_name>
        <docblock line="53">
          <description>Returns a random character within the start and end ascii characters</description>
          <long-description>&lt;p&gt;See http://www.asciitable.com/&lt;/p&gt;</long-description>
          <tag line="53" name="param" description="The start ascii character number" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="53" name="param" description="The end ascii character number" type="int" variable="$end">
            <type by_reference="false">int</type>
          </tag>
          <tag line="53" name="return" description="A single character" type="\_\char">
            <type by_reference="false">\_\char</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$start</name>
          <default>32</default>
          <type/>
        </argument>
        <argument line="62">
          <name>$end</name>
          <default>126</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _Rand.php</error>
      <error line="19" code="50000">No DocBlock was found for \_\_Rand</error>
      <error line="21" code="50018">No DocBlock was found for property $lettersNums</error>
    </parse_markers>
  </file>
  <file path="_ServiceResponse.php" hash="17096c77a9cb3c523e6f4394daab3bc2" package="Default">
    <include line="26" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="76" type="Require Once" package="Default">
      <name>XML/Serializer.php</name>
    </include>
    <constant namespace="global" line="23" package="Default">
      <name>_BASE_PATH</name>
      <full_name>\_BASE_PATH</full_name>
      <value>realpath(dirname(__FILE__) . '/') . '/'</value>
    </constant>
    <class final="false" abstract="false" namespace="_" line="28" package="Default">
      <extends/>
      <name>_ServiceResponse</name>
      <full_name>\_\_ServiceResponse</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="38" package="Default">
        <name>_success</name>
        <full_name>_success</full_name>
        <docblock line="30">
          <description>Create a service response of success</description>
          <long-description></long-description>
          <tag line="30" name="param" description="An object or array of objects" type="array" variable="$objects">
            <type by_reference="false">array</type>
          </tag>
          <tag line="30" name="param" description="Whether to echo out of response" type="bool" variable="$echoResponse">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="30" name="param" description="_ServiceResponse_JSON or _ServiceResponse_XML" type="\_\const" variable="$format">
            <type by_reference="false">\_\const</type>
          </tag>
          <tag line="30" name="return" description="The response" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$objects</name>
          <default></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$echoResponse</name>
          <default>TRUE</default>
          <type/>
        </argument>
        <argument line="38">
          <name>$format</name>
          <default>_ServiceResponse_JSON</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="50" package="Default">
        <name>_failure</name>
        <full_name>_failure</full_name>
        <docblock line="42">
          <description>Create a service response of failure</description>
          <long-description></long-description>
          <tag line="42" name="param" description="An object or array of objects" type="array" variable="$objects">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="param" description="Whether to echo out of response" type="bool" variable="$echoResponse">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="42" name="param" description="_ServiceResponse_JSON or _ServiceResponse_XML" type="\_\const" variable="$format">
            <type by_reference="false">\_\const</type>
          </tag>
          <tag line="42" name="return" description="The response" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$objects</name>
          <default></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$echoResponse</name>
          <default>TRUE</default>
          <type/>
        </argument>
        <argument line="50">
          <name>$format</name>
          <default>_ServiceResponse_JSON</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="_" line="63" package="Default">
        <name>_doResponse</name>
        <full_name>_doResponse</full_name>
        <docblock line="54">
          <description>Builds the response</description>
          <long-description></long-description>
          <tag line="54" name="param" description="" type="\_\type" variable="$type">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="54" name="param" description="" type="\_\type" variable="$objects">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="54" name="param" description="" type="\_\type" variable="$echoResponse">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="54" name="param" description="" type="\_\type" variable="$format">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="54" name="return" description="" type="\_\type">
            <type by_reference="false">\_\type</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$objects</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$echoResponse</name>
          <default></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$format</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _ServiceResponse.php</error>
      <error line="28" code="50000">No DocBlock was found for \_\_ServiceResponse</error>
    </parse_markers>
  </file>
  <file path="_Session.php" hash="dda44bc9441e1d5413aa5ba6c634005a" package="Default">
    <include line="21" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="18" package="Default">
      <name>_BASE_PATH</name>
      <full_name>\_BASE_PATH</full_name>
      <value>realpath(dirname(__FILE__) . '/') . '/'</value>
    </constant>
    <class final="false" abstract="false" namespace="_" line="23" package="Default">
      <extends/>
      <name>_Session</name>
      <full_name>\_\_Session</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="25" package="Default">
        <name>isActive</name>
        <full_name>isActive</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="50" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <argument line="50">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$val</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="61" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <argument line="61">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="71" package="Default">
        <name>startSession</name>
        <full_name>startSession</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="75" package="Default">
        <name>destroySession</name>
        <full_name>destroySession</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _Session.php</error>
      <error line="23" code="50000">No DocBlock was found for \_\_Session</error>
      <error line="25" code="50010">No DocBlock was found for method isActive()</error>
      <error line="50" code="50010">No DocBlock was found for method set()</error>
      <error line="61" code="50010">No DocBlock was found for method get()</error>
      <error line="71" code="50010">No DocBlock was found for method startSession()</error>
      <error line="75" code="50010">No DocBlock was found for method destroySession()</error>
    </parse_markers>
  </file>
  <file path="_SSL.php" hash="16bc5cb0d2703adc6a5b8cf48510111c" package="Default">
    <class final="false" abstract="false" namespace="_" line="17" package="Default">
      <extends/>
      <name>_SSL</name>
      <full_name>\_\_SSL</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="25" package="Default">
        <name>_requireSSL</name>
        <full_name>_requireSSL</full_name>
        <docblock line="19">
          <description>Requires SSL by redirecting non-SSL requests to the corresponding SSL endpoint
i.e.</description>
          <long-description>&lt;p&gt;http://foo.com/test REDIRECTS TO https://food.com/test&lt;/p&gt;</long-description>
          <tag line="19" name="throws" description="If $_SERVER variables are not set" type="\_\_Exception">
            <type by_reference="false">\_\_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="43" package="Default">
        <name>_isSSL</name>
        <full_name>_isSSL</full_name>
        <docblock line="38">
          <description>Determines whether the connection is over SSL</description>
          <long-description></long-description>
          <tag line="38" name="return" description="TRUE if the connection is SSL | FALSE if not SSL" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _SSL.php</error>
      <error line="17" code="50000">No DocBlock was found for \_\_SSL</error>
    </parse_markers>
  </file>
  <file path="_UUID.php" hash="fd450a1626dd3749a16a861d2df87174" package="Default">
    <include line="21" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="18" package="Default">
      <name>_BASE_PATH</name>
      <full_name>\_BASE_PATH</full_name>
      <value>realpath(dirname(__FILE__) . '/') . '/'</value>
    </constant>
    <class final="false" abstract="false" namespace="_" line="23" package="Default">
      <extends/>
      <name>_UUID</name>
      <full_name>\_\_UUID</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="32" package="Default">
        <name>getUUID</name>
        <full_name>getUUID</full_name>
        <docblock line="25">
          <description>Gets a 36 character UUID in the format: 5c0c5a48-90c7-46b7-a836-36bc0502cc9b</description>
          <long-description>&lt;p&gt;Adapted from http://www.php.net/manual/en/function.uniqid.php#94959&lt;/p&gt;</long-description>
          <tag line="25" name="return" description="36 character UUID" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$withHyphens</name>
          <default>TRUE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="62" package="Default">
        <name>charUUIDToBinary</name>
        <full_name>charUUIDToBinary</full_name>
        <docblock line="54">
          <description>Changes a 36 character (or 32 without hypens) UUID to binary</description>
          <long-description>&lt;p&gt;Adapted from http://stackoverflow.com/questions/2839037/php-mysql-storing-and-retrieving-uuids/2839147#2839147&lt;/p&gt;</long-description>
          <tag line="54" name="param" description="The UUID to convert to binary" type="string" variable="$charUUID">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="return" description="The UUID as a binary" type="\_\binary">
            <type by_reference="false">\_\binary</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$charUUID</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="76" package="Default">
        <name>binaryUUIDToCharUUID</name>
        <full_name>binaryUUIDToCharUUID</full_name>
        <docblock line="67">
          <description>Changes a binary UUID into a 36 character (or 32 without hypens) UUID</description>
          <long-description>&lt;p&gt;Adapted from http://stackoverflow.com/questions/2839037/php-mysql-storing-and-retrieving-uuids/2839147#2839147&lt;/p&gt;</long-description>
          <tag line="67" name="param" description="The UUID to convert to characters" type="string" variable="$binaryUUID">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="param" description="Whether to include the hyphens in the UUID.  Default is TRUE" type="string" variable="$withHyphens">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="return" description="The UUID as a string" type="\_\binary">
            <type by_reference="false">\_\binary</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$binaryUUID</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$withHyphens</name>
          <default>TRUE</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _UUID.php</error>
      <error line="23" code="50000">No DocBlock was found for \_\_UUID</error>
      <error line="25" code="50015">Argument $withHyphens is missing from the Docblock of getUUID()</error>
    </parse_markers>
  </file>
  <file path="_ViewData.php" hash="0bbcccc1079603ee74fe02f4eb5ae6ba" package="Default">
    <class final="false" abstract="false" namespace="_" line="17" package="Default">
      <extends/>
      <name>_ViewData</name>
      <full_name>\_\_ViewData</full_name>
      <property final="false" static="true" visibility="private" line="22" namespace="_" package="Default">
        <name>$keyvals</name>
        <default></default>
        <docblock line="19">
          <description></description>
          <long-description></long-description>
          <tag line="19" name="var" description="| Key/Value array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="32" package="Default">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="24">
          <description>Sets</description>
          <long-description></long-description>
          <tag line="24" name="param" description="| The unique key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="param" description="| The value (can be any object" type="object" variable="$value">
            <type by_reference="false">object</type>
          </tag>
          <tag line="24" name="param" description="&amp;$isOverwrite (optional) | Passed by reference, will be set to TRUE if the $key is overwritten / FALSE if this is a new key that is set" type="bool" variable="$isOverwrite">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="24" name="return" description="| TRUE on success" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="32">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="32">
          <name>$isOverwrite</name>
          <default>FALSE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="51" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="45">
          <description>Gets the value corresponding to the $key</description>
          <long-description></long-description>
          <tag line="45" name="param" description="" type="\_\type" variable="$key">
            <type by_reference="false">\_\type</type>
          </tag>
          <tag line="45" name="return" description="| Returns the 'value' for a 'key' as an object on success | Empty string if key does not exist" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="61" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="58">
          <description>Resets / clears all data</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _ViewData.php</error>
      <error line="17" code="50000">No DocBlock was found for \_\_ViewData</error>
    </parse_markers>
  </file>
  <file path="_WebResponse.php" hash="2ea7a331f5774ef427994292311f9016" package="Default">
    <include line="21" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="22" type="Require Once" package="Default">
      <name/>
    </include>
    <include line="23" type="Require Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="19" package="Default">
      <name>_BASE_PATH</name>
      <full_name>\_BASE_PATH</full_name>
      <value>realpath(dirname(__FILE__) . '/') . '/'</value>
    </constant>
    <class final="false" abstract="false" namespace="_" line="25" package="Default">
      <extends/>
      <name>_WebResponse</name>
      <full_name>\_\_WebResponse</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="32" package="Default">
        <name>_redirect</name>
        <full_name>_redirect</full_name>
        <docblock line="27">
          <description>Redirects to the specified url</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The url to redirect to" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="41" package="Default">
        <name>_sendCacheHeaders</name>
        <full_name>_sendCacheHeaders</full_name>
        <docblock line="36">
          <description>Sends headers to cache for the specified number of MINUTES</description>
          <long-description></long-description>
          <tag line="36" name="param" description="Cache duration in MINUTES" type="int" variable="$expire">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$expire</name>
          <default>5</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="55" package="Default">
        <name>_sendP3PHeaders</name>
        <full_name>_sendP3PHeaders</full_name>
        <docblock line="51">
          <description>Sends P3P headers.</description>
          <long-description>&lt;p&gt;Can fix silly IE issues with downloading of files, using cookies, etc.
http://en.wikipedia.org/wiki/P3P&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="62" package="Default">
        <name>_sendDoNotCacheHeaders</name>
        <full_name>_sendDoNotCacheHeaders</full_name>
        <docblock line="59">
          <description>Sends headers that this should NOT BE CACHED</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="76" package="Default">
        <name>_sendHTTPStatusCode</name>
        <full_name>_sendHTTPStatusCode</full_name>
        <docblock line="69">
          <description>Sends the HTTP status code</description>
          <long-description></long-description>
          <tag line="69" name="param" description="The code to send" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="69" name="param" description="(optional) The description of the response code" type="\_\type" variable="$customDescription">
            <type by_reference="false">\_\type</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$customDescription</name>
          <default>FALSE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="_" line="95" package="Default">
        <name>_setContentType</name>
        <full_name>_setContentType</full_name>
        <docblock line="90">
          <description>Sets the Content-type header</description>
          <long-description></long-description>
          <tag line="90" name="param" description="The content type" type="string" variable="$contentType">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$contentType</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file _WebResponse.php</error>
      <error line="25" code="50000">No DocBlock was found for \_\_WebResponse</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <namespace name="_" full_name="_">
    <namespace name="_includes" full_name="_\_includes"/>
  </namespace>
  <namespace name="global" full_name="global"/>
  <marker count="1">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
